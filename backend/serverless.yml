# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: lucaslopes2
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: helpinho
service: helpinho

custom:
  usersTable: "users-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  architecture: arm64
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  memorySize: 128
  logRetentionInDays: 1
  timeout: 15
  iam:
   role:
     statements:
       - Effect: Allow
         Action:
           - dynamodb:Query
           - dynamodb:Scan
           - dynamodb:GetItem
           - dynamodb:PutItem
           - dynamodb:UpdateItem
           - dynamodb:DeleteItem
           - dynamodb:DescribeTable
         Resource:
           - Fn::GetAtt: [UsersTable, Arn]
           
  environment:
    USERS_TABLE: ${self:custom.usersTable}

package:
  individually: true

functions:
   api:
    handler: dist/src/lambda.handler
    events:
      - httpApi:
          method: any
          path: /{proxy+}

plugins:
  - serverless-jetpack
  - serverless-offline

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.usersTable}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST